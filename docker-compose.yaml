version: '3.8'

services:
  app:
    build: .
    image: players-app
    container_name: soccer_app
    env_file: ".env"
    command: gunicorn --workers 4 --bind 0.0.0.0:${APP_PORT} main:app
    expose:
      - "${APP_PORT}"
    healthcheck:
      test: curl -f http://127.0.0.1:${APP_PORT}/health
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  db:
    image: mysql:8.0
    container_name: soccer_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    expose:
      - "${MYSQL_PORT}"
      - "33060"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u ${MYSQL_USER} --password=${MYSQL_PASSWORD}
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend
    restart: unless-stopped
  cache:
    image: redis:alpine
    container_name: soccer_cache
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped

  proxy:
    image: nginx:alpine
    container_name: soccer_proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs/:/etc/nginx/certs/:ro # Read-only permission
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: curl -f https://127.0.0.1/health --insecure
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    depends_on:
      - app
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  backend:
    name: backend
    driver: bridge